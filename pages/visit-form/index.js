import Head from "next/head";
import Link from "next/link";
import { useContext, useState, useEffect, React } from "react";
import { Col, Container, Button, Row } from "react-bootstrap";
import Accordion from "react-bootstrap/Accordion";
import Image from "next/image";
import styles from "./styles.module.scss";
import { Check, PatchCheck, ArrowRight } from "react-bootstrap-icons";
import { Card } from "react-bootstrap";
import { useAccordionButton } from "react-bootstrap/AccordionButton";
import ButtonGroup from "react-bootstrap/ButtonGroup";
import ToggleButton from "react-bootstrap/ToggleButton";
import { AccordionContext, Form } from "react-bootstrap";
import Axios from "axios";
import AuthContext from "../../store/auth-context";
export default function Home() {
  const [questions, setQuestions] = useState({});

  const numbers = <div>Cure</div>;

  const authCtx = useContext(AuthContext);
  const gettingQuestions = async () => {
    const route = "/api/case/get-questions";

    try {
      const rese = await Axios.post(route, { Token: authCtx.Token })
        .then((res) => {
          // console.log(res.data);

          setQuestions(res.data);
        })
        .catch((error) => {
          console.log(error);
          alert("Not Good!");
        });
    } catch (err) {
      alert("Something went wrong!" + err);
    }
  };

  useEffect(() => {
    gettingQuestions();
  }, []);

  useEffect(() => {}, []);

  const handleChange = (event) => {
    const { value, name } = event.target;
    setFormData({
      ...formData,
      [name]: value,
    });
  };

  const [formData, setFormData] = useState({
    firstName: "",
    lastName: "",
    dob: "",
  });

  const handleSubmit = async (event) => {
    event.preventDefault();
    const route = "/api/case/medical-form";
    const payload = {
      firstName: formData.firstName,
      lastName: formData.lastName,
      dob: formData.dob,
    };
    try {
      const rese = await Axios.post(route, payload)
        .then((res) => {
          console.log(res.data);
        })
        .catch((error) => {
          alert(error.response.data.errors);
        });
    } catch (err) {
      alert("Username or password are not good! 22" + err);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Pure Blue - Visit Form</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.registerPage}>
        <Container>
          <div className={styles.fieldOne}>
            <Col md={{ span: 7, offset: 5 }}>
              <div className={styles.callUs}>
                <Link href="tel: 1-888-534-8977">
                  <a>
                    Call toll free to order:{" "}
                    <span className={styles.blueText}>1-888-534-8977</span>
                  </a>
                </Link>
              </div>
            </Col>
            <div className="text-center">
              <h2>Please Complete Medical Profile</h2>
              <p className={styles.grayText}>
                No waiting rooms. No expensive doctors visits. Prescription
                treatments sent to your door, discreetly. This is the future of
                tele-medicine.
              </p>
            </div>
            <Col md={{ span: 6, offset: 3 }}>
              <div className={styles.formField}>
                <Form onSubmit={handleSubmit}>
                  <Row className="mb-3">
                    <Form.Group as={Col} controlId="firstName">
                      <Form.Label>
                        {" "}
                        Patient First Name *{" "}
                        <small>(As it appears on your ID)</small>
                      </Form.Label>
                      <Form.Control
                        required
                        name="firstName"
                        type="name"
                        onChange={handleChange}
                        placeholder="Enter First Name"
                        value={formData.email}
                        className={styles.formControl}
                      />
                      <Form.Control.Feedback type="invalid">
                        Incorrect First name
                      </Form.Control.Feedback>
                    </Form.Group>
                  </Row>
                  <Row className="mb-3">
                    <Form.Group as={Col} controlId="lastName">
                      <Form.Label>
                        {" "}
                        Patient Last Name *{" "}
                        <small>(As it appears on your ID)</small>
                      </Form.Label>
                      <Form.Control
                        required
                        name="lastName"
                        type="name"
                        onChange={handleChange}
                        placeholder="Enter Last name"
                        value={formData.email}
                        className={styles.formControl}
                      />
                      <Form.Control.Feedback type="invalid">
                        Incorrect Last name
                      </Form.Control.Feedback>
                    </Form.Group>
                  </Row>
                  <Row className="mb-3">
                    <Form.Group as={Col} controlId="dob">
                      <Form.Label>Birthday</Form.Label>
                      <Form.Control
                        required
                        name="dob"
                        type="date"
                        onChange={handleChange}
                        placeholder="Enter Date of birth"
                        value={formData.email}
                        className={styles.formControl}
                      />
                      <Form.Control.Feedback type="invalid">
                        Incorrect Birthday
                      </Form.Control.Feedback>
                    </Form.Group>
                  </Row>
                  <Button className="d-block mx-auto py-3 mt-5" type="submit">
                    Next <ArrowRight />
                  </Button>
                </Form>
                {Object.entries(questions).map(([name, question]) => {
                  if (question.type === "radio") {
                    console.log(question);
                    var labela = <div>{question.label}</div>;
                    var options = Object.entries(question.answers).map(
                      ([key, value]) => {
                        return (
                          <div key={value.label + key} className="col-3">
                            <Form.Check>
                              <Form.Check.Input
                                type="radio"
                                className="btn-check"
                                name={name}
                                id={name + key}
                                onChange={handleChange}
                                value={key}
                              />
                              <Form.Check.Label
                                htmlFor={name + key}
                                className={
                                  styles.buttons + " btn" + " btn-primary"
                                }
                              >
                                {value}{" "}
                              </Form.Check.Label>
                            </Form.Check>
                          </div>
                        );
                      }
                    );
                    return (
                      <div key={question.label}>
                        {labela} <Row>{options}</Row>
                        <br /> <br /> <br /> <br />
                      </div>
                    );
                  } else if (question.type === "checkbox") {
                    var labela = <div>{question.label}</div>;
                    var options = Object.entries(question.answers).map(
                      ([key, value]) => {
                        return (
                          <div key={value.label + key} className="col-3">
                            {["checkbox", "radio"].map((type) => (
                              <div key={type} className="mb-3">
                                <Form.Check
                                  type="checkbox"
                                  id={`check-api-${type}`}
                                >
                                  <Form.Check.Input type={type} isValid />
                                  <Form.Check.Label>{`Custom api ${type}`}</Form.Check.Label>
                                  <Form.Control.Feedback type="valid">
                                    You did it!
                                  </Form.Control.Feedback>
                                </Form.Check>
                              </div>
                            ))}
                          </div>
                        );
                      }
                    );
                  }
                })}
              </div>
            </Col>
          </div>
        </Container>
      </main>
    </div>
  );
}
